from django.shortcuts import render
from django.http import HttpResponseRedirect
from django.urls import reverse
import subprocess
import os
import platform

def home(request):
    if request.method == 'POST' and request.FILES.get('file_upload'):
        file = request.FILES['file_upload']
        # Define the directory within your 'myapp' directory where you want to save the uploaded files
        upload_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'uploads')
        # Create the directory if it doesn't exist
        
        if not os.path.exists(upload_dir):
            os.makedirs(upload_dir)
        # Save the uploaded file to the specified directory
        with open(os.path.join(upload_dir, file.name), 'wb+') as destination:
            for chunk in file.chunks():
                destination.write(chunk)
        return HttpResponseRedirect(reverse('success', kwargs={'file_name': file.name}))
    return render(request, 'home.html')

def success(request, file_name):
    if request.method == 'POST':
        
         return HttpResponseRedirect(reverse('generate', kwargs={'file_name': file_name}))
    
    return render(request, 'success.html', {'file_name': file_name})


def generate(request, file_name):
  
    rundocker(file_name)

    return render(request, 'generate.html',{'file_name': file_name})

    


import subprocess

def rundocker(file):
    docker_command = "docker "
    process = subprocess.Popen(docker_command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    # Wait for the command to finish
    stdout, stderr = process.communicate()

    # Check for errors
    if process.returncode != 0:
        print(f"Error executing Docker command: {stderr.decode('utf-8')} {file}")
    else:
        print(f"Docker command executed successfully:\n{stdout.decode('utf-8')}, {file} name")

